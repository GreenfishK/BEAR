%!PS-Adobe-2.0 EPSF-2.0
%%Title: dyn-mat-s-100-e0.1.eps
%%Creator: gnuplot 5.0 patchlevel 0
%%CreationDate: Thu Apr 30 19:03:19 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Dec 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (dyn-mat-s-100-e0.1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 0)
  /Author (jumbrich)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Apr 30 19:03:19 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1176 768 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 768 M
[ [(Times) 240.0 0.0 true true 0 ( 0.1)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1176 1168 M
31 0 V
5560 0 R
-31 0 V
1176 1401 M
31 0 V
5560 0 R
-31 0 V
1176 1567 M
31 0 V
5560 0 R
-31 0 V
1176 1696 M
31 0 V
5560 0 R
-31 0 V
1176 1801 M
31 0 V
5560 0 R
-31 0 V
-5560 89 R
31 0 V
5560 0 R
-31 0 V
-5560 77 R
31 0 V
5560 0 R
-31 0 V
-5560 68 R
31 0 V
5560 0 R
-31 0 V
-5560 61 R
63 0 V
5528 0 R
-63 0 V
stroke
1032 2096 M
[ [(Times) 240.0 0.0 true true 0 ( 1)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1176 2495 M
31 0 V
5560 0 R
-31 0 V
1176 2729 M
31 0 V
5560 0 R
-31 0 V
1176 2895 M
31 0 V
5560 0 R
-31 0 V
1176 3024 M
31 0 V
5560 0 R
-31 0 V
1176 3129 M
31 0 V
5560 0 R
-31 0 V
-5560 89 R
31 0 V
5560 0 R
-31 0 V
-5560 77 R
31 0 V
5560 0 R
-31 0 V
-5560 68 R
31 0 V
5560 0 R
-31 0 V
-5560 60 R
63 0 V
5528 0 R
-63 0 V
stroke
1032 3423 M
[ [(Times) 240.0 0.0 true true 0 ( 10)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1176 3823 M
31 0 V
5560 0 R
-31 0 V
1176 4057 M
31 0 V
5560 0 R
-31 0 V
1176 4223 M
31 0 V
5560 0 R
-31 0 V
1176 4351 M
31 0 V
5560 0 R
-31 0 V
1176 4456 M
31 0 V
5560 0 R
-31 0 V
-5560 89 R
31 0 V
5560 0 R
-31 0 V
-5560 77 R
31 0 V
5560 0 R
-31 0 V
-5560 68 R
31 0 V
5560 0 R
-31 0 V
-5560 61 R
63 0 V
5528 0 R
-63 0 V
stroke
1032 4751 M
[ [(Times) 240.0 0.0 true true 0 ( 100)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1224 768 M
0 63 V
0 3920 R
0 -63 V
stroke
1224 528 M
[ [(Times) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2180 768 M
0 63 V
0 3920 R
0 -63 V
stroke
2180 528 M
[ [(Times) 240.0 0.0 true true 0 ( 10)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3135 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3135 528 M
[ [(Times) 240.0 0.0 true true 0 ( 20)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4091 768 M
0 63 V
0 3920 R
0 -63 V
stroke
4091 528 M
[ [(Times) 240.0 0.0 true true 0 ( 30)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5047 768 M
0 63 V
0 3920 R
0 -63 V
stroke
5047 528 M
[ [(Times) 240.0 0.0 true true 0 ( 40)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6002 768 M
0 63 V
0 3920 R
0 -63 V
stroke
6002 528 M
[ [(Times) 240.0 0.0 true true 0 ( 50)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1176 4751 N
0 -3983 V
5591 0 V
0 3983 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
192 2759 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times) 240.0 0.0 true true 0 (query time in ms \(logscale\))]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
3971 168 M
[ [(Times) 240.0 0.0 true true 0 (version)]
] -80.0 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
1608 4568 M
[ [(Times) 240.0 0.0 true true 0 (IC)]
] -80.0 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 1752 4568 M
639 0 V
1176 2347 M
48 -118 V
95 -9 V
96 27 V
96 43 V
95 8 V
96 -8 V
95 -34 V
96 -46 V
95 28 V
96 9 V
96 26 V
95 0 V
96 -44 V
95 -19 V
96 702 V
95 -711 V
96 -40 V
96 40 V
95 -10 V
96 38 V
95 -48 V
96 0 V
95 -52 V
96 52 V
96 -10 V
95 49 V
96 -19 V
95 -30 V
96 -31 V
95 31 V
96 0 V
96 10 V
95 -52 V
96 52 V
95 -41 V
96 0 V
95 70 V
96 -19 V
96 -40 V
95 -11 V
96 41 V
95 0 V
96 -63 V
95 0 V
96 33 V
96 30 V
95 -20 V
96 -21 V
95 -68 V
96 35 V
95 54 V
96 -65 V
96 33 V
95 -11 V
96 11 V
95 32 V
96 -65 V
1224 2229 Pls
1319 2220 Pls
1415 2247 Pls
1511 2290 Pls
1606 2298 Pls
1702 2290 Pls
1797 2256 Pls
1893 2210 Pls
1988 2238 Pls
2084 2247 Pls
2180 2273 Pls
2275 2273 Pls
2371 2229 Pls
2466 2210 Pls
2562 2912 Pls
2657 2201 Pls
2753 2161 Pls
2849 2201 Pls
2944 2191 Pls
3040 2229 Pls
3135 2181 Pls
3231 2181 Pls
3326 2129 Pls
3422 2181 Pls
3518 2171 Pls
3613 2220 Pls
3709 2201 Pls
3804 2171 Pls
3900 2140 Pls
3995 2171 Pls
4091 2171 Pls
4187 2181 Pls
4282 2129 Pls
4378 2181 Pls
4473 2140 Pls
4569 2140 Pls
4664 2210 Pls
4760 2191 Pls
4856 2151 Pls
4951 2140 Pls
5047 2181 Pls
5142 2181 Pls
5238 2118 Pls
5333 2118 Pls
5429 2151 Pls
5525 2181 Pls
5620 2161 Pls
5716 2140 Pls
5811 2072 Pls
5907 2107 Pls
6002 2161 Pls
6098 2096 Pls
6194 2129 Pls
6289 2118 Pls
6385 2129 Pls
6480 2161 Pls
6576 2096 Pls
2071 4568 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C LCb setrgbcolor
1608 4328 M
[ [(Times) 240.0 0.0 true true 0 (TB)]
] -80.0 MRshow
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C 1752 4328 M
639 0 V
1224 4167 M
95 -268 V
96 8 V
96 -35 V
95 8 V
96 -3 V
95 -34 V
96 8 V
95 10 V
96 4 V
96 25 V
95 -16 V
96 17 V
95 25 V
96 -38 V
95 3 V
96 15 V
96 0 V
95 31 V
96 -27 V
95 6 V
96 -9 V
95 0 V
96 4 V
96 5 V
95 4 V
96 4 V
95 33 V
96 -25 V
95 -3 V
96 5 V
96 15 V
95 -2 V
96 8 V
95 -7 V
96 20 V
95 6 V
96 -10 V
96 10 V
95 4 V
96 3 V
95 -1 V
96 6 V
95 12 V
96 -7 V
96 3 V
95 -2 V
96 15 V
95 -9 V
96 32 V
95 -16 V
96 18 V
96 -8 V
95 -4 V
96 12 V
95 16 V
96 -3 V
95 12 V
1224 4167 Crs
1319 3899 Crs
1415 3907 Crs
1511 3872 Crs
1606 3880 Crs
1702 3877 Crs
1797 3843 Crs
1893 3851 Crs
1988 3861 Crs
2084 3865 Crs
2180 3890 Crs
2275 3874 Crs
2371 3891 Crs
2466 3916 Crs
2562 3878 Crs
2657 3881 Crs
2753 3896 Crs
2849 3896 Crs
2944 3927 Crs
3040 3900 Crs
3135 3906 Crs
3231 3897 Crs
3326 3897 Crs
3422 3901 Crs
3518 3906 Crs
3613 3910 Crs
3709 3914 Crs
3804 3947 Crs
3900 3922 Crs
3995 3919 Crs
4091 3924 Crs
4187 3939 Crs
4282 3937 Crs
4378 3945 Crs
4473 3938 Crs
4569 3958 Crs
4664 3964 Crs
4760 3954 Crs
4856 3964 Crs
4951 3968 Crs
5047 3971 Crs
5142 3970 Crs
5238 3976 Crs
5333 3988 Crs
5429 3981 Crs
5525 3984 Crs
5620 3982 Crs
5716 3997 Crs
5811 3988 Crs
5907 4020 Crs
6002 4004 Crs
6098 4022 Crs
6194 4014 Crs
6289 4010 Crs
6385 4022 Crs
6480 4038 Crs
6576 4035 Crs
6671 4047 Crs
2071 4328 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C LCb setrgbcolor
1608 4088 M
[ [(Times) 240.0 0.0 true true 0 (CB)]
] -80.0 MRshow
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C 1752 4088 M
639 0 V
1224 4057 M
95 -1309 V
96 11 V
96 212 V
95 -21 V
96 286 V
95 225 V
96 -92 V
95 123 V
96 -54 V
96 110 V
95 -4 V
96 52 V
95 676 V
96 -626 V
95 50 V
96 178 V
96 -53 V
95 80 V
96 -45 V
95 -86 V
96 39 V
95 141 V
96 -93 V
96 32 V
95 73 V
96 -8 V
95 63 V
96 4 V
95 -6 V
96 -63 V
96 62 V
95 -18 V
96 -1 V
95 -31 V
96 13 V
95 40 V
96 51 V
96 -36 V
95 10 V
96 118 V
95 17 V
96 -40 V
95 -24 V
96 116 V
96 24 V
95 -52 V
96 -109 V
95 143 V
96 -85 V
95 -9 V
96 2 V
96 17 V
95 -20 V
96 -3 V
95 17 V
96 59 V
95 -97 V
1224 4057 Star
1319 2748 Star
1415 2759 Star
1511 2971 Star
1606 2950 Star
1702 3236 Star
1797 3461 Star
1893 3369 Star
1988 3492 Star
2084 3438 Star
2180 3548 Star
2275 3544 Star
2371 3596 Star
2466 4272 Star
2562 3646 Star
2657 3696 Star
2753 3874 Star
2849 3821 Star
2944 3901 Star
3040 3856 Star
3135 3770 Star
3231 3809 Star
3326 3950 Star
3422 3857 Star
3518 3889 Star
3613 3962 Star
3709 3954 Star
3804 4017 Star
3900 4021 Star
3995 4015 Star
4091 3952 Star
4187 4014 Star
4282 3996 Star
4378 3995 Star
4473 3964 Star
4569 3977 Star
4664 4017 Star
4760 4068 Star
4856 4032 Star
4951 4042 Star
5047 4160 Star
5142 4177 Star
5238 4137 Star
5333 4113 Star
5429 4229 Star
5525 4253 Star
5620 4201 Star
5716 4092 Star
5811 4235 Star
5907 4150 Star
6002 4141 Star
6098 4143 Star
6194 4160 Star
6289 4140 Star
6385 4137 Star
6480 4154 Star
6576 4213 Star
6671 4116 Star
2071 4088 Star
% End plot #3
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1176 4751 N
0 -3983 V
5591 0 V
0 3983 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
